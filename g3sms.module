<?php

/**
 * hook_menu
 */
function g3sms_menu() {
  $items = array();
  $items['g/admin/site/sms'] = array(
    'title' => "SMS Settings",
    'page callback' => 'drupal_get_form',
    'page arguments' => array('g3sms_settings_form'),
    'access arguments' => array('administer site configuration'),
    'file' => 'g3sms.admin.inc',
  );
  return $items;
}

/**
 * util: put an array of phone numbers into canonical format
 */
function _g3sms_canonical_numbers($numbers) {

  // strip out all non digits
  $numbers = array_map( 
    function($n) { return preg_replace("/[^0-9,.]/", "", $n); },
    $numbers
  );

  // strip out any empty numbers
  $numbers = array_filter( $numbers, function($n) { return !empty($n); } );

  return $numbers;
}

/**
 * util: send a message
 */
function _g3sms_send($message) {

  $username = variable_get('g3sms_eztexting_username', '');
  $password = variable_get('g3sms_eztexting_password', '');

  $message['User'] = $username;
  $message['Password'] = $password;

  $url_encoded_query = drupal_http_build_query($message);

  $options = array(
    'method' => 'POST',
    'data' => $url_encoded_query,
    'timeout' => 15,
    'headers' => array('Content-Type' => 'application/x-www-form-urlencoded'),
  );

  $result = new StdClass();

  try {
    $result = drupal_http_request(
    'https://app.eztexting.com/sending/messages?format=json',
      $options
    );
  } catch( Exception $e ) {
    $result->code = 500;
  }

  return $result;
}

/**
 * API: send an sms message
 * $message = array(
 *   'PhoneNumbers'  => array($n),
 *   'Subject'       => variable_get('g3sms_eztexting_subject', "Choir Genius"),
 *   'Message'       => $message,
 */
function g3sms_send($message) {

  $username = variable_get('g3sms_eztexting_username', '');
  $password = variable_get('g3sms_eztexting_password', '');

  if( empty($username) || empty($password) ) {
    drupal_set_message(t("Your SMS module is enabled, but your SMS username and password are blank. Please paste them into the !link.", array('!link'=>l("SMS settings page", 'g/admin/site/sms'))), 'warning');
    return 1;
  }

  $numbers = _g3sms_canonical_numbers($message['PhoneNumbers']);
      
  if( sizeof($numbers) ) {

    // we send one at a time so bad numbers don't screw up sending to good numbers in the batch
    foreach($numbers AS $n) {

      $message = array(
        'PhoneNumbers'  => array($n),
        'Subject'       => $message['Subject'],
        'Message'       => $message['Message'],
      );
      $result = _g3sms_send($message);

      if( $result->code != 201 ) {

        $data = drupal_json_decode($result->data);
        switch($result->code) {
          case 403:
            // turns out they send back 403 for several cases, so we can't treat it as a hard stop
          default:
            $msg = t("Attempting to send to @num resulted in an error: @err (code @code)",
              array('@num'=>$n, '@err'=>implode(', ', $data['Response']['Errors']), '@code'=>$result->code));
            drupal_set_message( $msg, 'error');
            watchdog('g3sms', "SMS Failed:<pre>".print_r($result,TRUE)."</pre>");
            break;
        }

      }
    }
  }

  return 0; // no error
}


/**
 * Put an SMS action into the member table actions array
 */
function g3sms_gs_member_gtable_actions_alter(&$actions) {

  // warning on the members page if sms not set up
  $username = variable_get('g3sms_eztexting_username', '');
  $password = variable_get('g3sms_eztexting_password', '');
  $subject = variable_get('g3sms_eztexting_subject', "Choir Genius");

  // check that the username and password are set up, or bail out
  if( empty($username) || empty($password) ) {
    drupal_set_message(t("Your SMS module is enabled, but your SMS username and password are blank. Please paste them into the !link.", array('!link'=>l("SMS settings page", 'g/admin/site/sms'))), 'warning');
    return;
  }

  $params = "<div><label>" . t("Enter your message to send as an SMS, up to 120 characters") . "</label>";
  $params .= "<textarea style='width:100%' maxlength=120 class='gtable_confirm_params'></textarea>";
  $params .= "<div>" . t("Remember, your SMS provider will charge you per text sent!") . "</div>";
  $params .= "</div>";
      
  $actions['send_sms_message'] = array(
    'title' => t('Send SMS Message'),
    'params' => $params,
    'redirect' => '/g/members',
    'callback' => function($ids, $params) {

      if( empty($ids) ) return;
      $username = variable_get('g3sms_eztexting_username', '');
      $password = variable_get('g3sms_eztexting_password', '');
      if( empty($username) || empty($password) ) {
        return t("No credentials - please check your SMS settings!");
      }

      // NB: message already limited to 120 chars by the textarea
      $message = $params[0];

      $numbers = db_query(
       "SELECT field_mobile_phone_value FROM field_data_field_mobile_phone
        WHERE entity_id IN (:ids) AND entity_type = 'user'",
        array(':ids' => $ids)
      )->fetchCol();

      $numbers = _g3sms_canonical_numbers($numbers);

      if( sizeof($numbers) ) {

        // we send one at a time so bad numbers don't screw up sending to good numbers in the batch
        foreach($numbers AS $n) {

          $message = array(
            'PhoneNumbers'  => array($n),
            'Subject'       => variable_get('g3sms_eztexting_subject', "Choir Genius"),
            'Message'       => $message,
          );

          $result = _g3sms_send($message);

          if( $result->code != 201 ) {

            $data = drupal_json_decode($result->data);
            switch($result->code) {
              case 403:
                // turns out they send back 403 for several cases, so we can't treat it as a hard stop
              default:
                $msg = t("Attempting to send to @num resulted in an error: @err (code @code)",
                  array('@num'=>$n, '@err'=>implode(', ', $data['Response']['Errors']), '@code'=>$result->code));
                drupal_set_message( $msg, 'error');
                watchdog('g3sms', "SMS Failed:<pre>".print_r($result,TRUE)."</pre>");
                break;
            }

          }
        }
      }
        
    }
  );

}
